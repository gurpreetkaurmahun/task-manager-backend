// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManager.Models;

#nullable disable

namespace task_manager_backend.Migrations
{
    [DbContext(typeof(TaskContext))]
    partial class TaskContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("TaskManager.Models.SubTask", b =>
                {
                    b.Property<int>("SubTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubTaskDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubTaskName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TaskItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SubTaskId");

                    b.HasIndex("TaskItemId");

                    b.ToTable("SubTasks");
                });

            modelBuilder.Entity("TaskManager.Models.TaskItem", b =>
                {
                    b.Property<int>("TaskItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TaskItemDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskItemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TaskItemId");

                    b.ToTable("TaskItems");
                });

            modelBuilder.Entity("TaskManager.Models.SubTask", b =>
                {
                    b.HasOne("TaskManager.Models.TaskItem", "TaskItem")
                        .WithMany("SubTasks")
                        .HasForeignKey("TaskItemId");

                    b.Navigation("TaskItem");
                });

            modelBuilder.Entity("TaskManager.Models.TaskItem", b =>
                {
                    b.Navigation("SubTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
